<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Forec&#39;s Notes</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://forec.github.io/"/>
  <updated>2016-10-29T08:00:56.254Z</updated>
  <id>http://forec.github.io/</id>
  
  <author>
    <name>Forec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Raspberry Pi 3 配置索引</title>
    <link href="http://forec.github.io/2016/10/29/raspberry-settings/"/>
    <id>http://forec.github.io/2016/10/29/raspberry-settings/</id>
    <published>2016-10-29T06:49:23.000Z</published>
    <updated>2016-10-29T08:00:56.254Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;整理 Raspberry Pi 3 的个人配置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;树莓派及配件型号&quot;&gt;&lt;a href=&quot;#树莓派及配件型号&quot; class=&quot;headerlink&quot; title=&quot;树莓派及配件型号&quot;&gt;&lt;/a&gt;树莓派及配件型号&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;树莓派型号：Raspberry Pi 3 Model B , Made in United Kingdom&lt;/li&gt;
&lt;li&gt;摄像头型号：1/4 inch OV5647 ，500W 像素，最高帧速 30，视频支持 1080p，made by OmniVision&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;RASPBIAN-JESSIE&quot;&gt;&lt;a href=&quot;#RASPBIAN-JESSIE&quot; class=&quot;headerlink&quot; title=&quot;RASPBIAN-JESSIE&quot;&gt;&lt;/a&gt;RASPBIAN-JESSIE&lt;/h1&gt;&lt;h2 id=&quot;镜像源修改&quot;&gt;&lt;a href=&quot;#镜像源修改&quot; class=&quot;headerlink&quot; title=&quot;镜像源修改&quot;&gt;&lt;/a&gt;镜像源修改&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; ，注释原有源&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deb &lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/mirrors.ustc.edu.cn/raspbian&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/raspbian/&lt;/span&gt; wheezy main non-free contrib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deb-src &lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/mirrors.ustc.edu.cn/raspbian&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/raspbian/&lt;/span&gt; wheezy main non-free contrib&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;自启动脚本&quot;&gt;&lt;a href=&quot;#自启动脚本&quot; class=&quot;headerlink&quot; title=&quot;自启动脚本&quot;&gt;&lt;/a&gt;自启动脚本&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;向 &lt;code&gt;/etc/rc.local&lt;/code&gt; 中写入 &lt;code&gt;su username -c &amp;quot;command you want&amp;quot;&lt;/code&gt;，将 command 指向自启动脚本。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;校园网关登陆&quot;&gt;&lt;a href=&quot;#校园网关登陆&quot; class=&quot;headerlink&quot; title=&quot;校园网关登陆&quot;&gt;&lt;/a&gt;校园网关登陆&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;可从我的 Github 托管仓库下载网关登陆 Python 脚本，在自启动脚本中加入 &lt;code&gt;python login.py username passwd&lt;/code&gt;，下载地址：&lt;a href=&quot;https://github.com/Forec/scripts-for-bupt/tree/master/login-bupt-gw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Forec/scripts-for-bupt/tree/master/login-bupt-gw&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;定时任务&quot;&gt;&lt;a href=&quot;#定时任务&quot; class=&quot;headerlink&quot; title=&quot;定时任务&quot;&gt;&lt;/a&gt;定时任务&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;执行 &lt;code&gt;crontab -e&lt;/code&gt; 设定定时任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;dev-video0-未找到&quot;&gt;&lt;a href=&quot;#dev-video0-未找到&quot; class=&quot;headerlink&quot; title=&quot;/dev/video0 未找到&quot;&gt;&lt;/a&gt;/dev/video0 未找到&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;树莓派的 Camare module 在 &lt;code&gt;/boot/&lt;/code&gt; 目录下以固件形式加载&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/modules-load.d/modules.conf&lt;/code&gt; ，文件末尾添加 &lt;code&gt;bcm2835-v4l2&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Motion-配置&quot;&gt;&lt;a href=&quot;#Motion-配置&quot; class=&quot;headerlink&quot; title=&quot;Motion 配置&quot;&gt;&lt;/a&gt;Motion 配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/motion/motion.conf&lt;/code&gt; ，修改以下项：&lt;ul&gt;
&lt;li&gt;&lt;code&gt;daemon&lt;/code&gt; : 修改为 on，使 motion 以守护进程方式运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt; : 修改为 1024&lt;/li&gt;
&lt;li&gt;&lt;code&gt;height&lt;/code&gt; : 修改为 768&lt;/li&gt;
&lt;li&gt;&lt;code&gt;framerate&lt;/code&gt; ： 修改为 24&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ffmpeg_video_codec&lt;/code&gt; ： 修改为 mpeg4&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control_localhost&lt;/code&gt; ： 修改为 off，允许远程修改配置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;control_authentication&lt;/code&gt; ： 为远程操控配置设置认证信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;webcam_localhost&lt;/code&gt; ： 允许远程访问监控流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/defaults/motion&lt;/code&gt;，将 &lt;code&gt;start_motion_daemon&lt;/code&gt; 修改为 &lt;code&gt;yes&lt;/code&gt;，设置为开机启动&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;VNC-分辨率调整&quot;&gt;&lt;a href=&quot;#VNC-分辨率调整&quot; class=&quot;headerlink&quot; title=&quot;VNC 分辨率调整&quot;&gt;&lt;/a&gt;VNC 分辨率调整&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在自启动脚本中加入 &lt;code&gt;vncserver -geometry widthxheight :1&lt;/code&gt;，将分辨率设置为 width × height，通过 &lt;code&gt;address:1&lt;/code&gt; 访问。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vncpasswd&lt;/code&gt; 修改密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;mstsc-访问&quot;&gt;&lt;a href=&quot;#mstsc-访问&quot; class=&quot;headerlink&quot; title=&quot;mstsc 访问&quot;&gt;&lt;/a&gt;mstsc 访问&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;安装 xrdp&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;SSH-公钥登陆&quot;&gt;&lt;a href=&quot;#SSH-公钥登陆&quot; class=&quot;headerlink&quot; title=&quot;SSH 公钥登陆&quot;&gt;&lt;/a&gt;SSH 公钥登陆&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh-copy-id user@host&lt;/code&gt; ，将本地公钥上传到树莓派。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Ubuntu-mate&quot;&gt;&lt;a href=&quot;#Ubuntu-mate&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu-mate&quot;&gt;&lt;/a&gt;Ubuntu-mate&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;无屏幕暂时无法尝试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;扩展文件系统&quot;&gt;&lt;a href=&quot;#扩展文件系统&quot; class=&quot;headerlink&quot; title=&quot;扩展文件系统&quot;&gt;&lt;/a&gt;扩展文件系统&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;`sudo fdisk /dev/mmcblk0&lt;/li&gt;
&lt;li&gt;按序输入 &lt;code&gt;d Enter 2 Enter n Enter p Enter 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;reboot&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo resize2fs /dev/mmcblk0p2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;reboot&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/10/29/raspberry-settings/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/10/29/raspberry-settings/&quot;&gt;https://forec.github.io/2016/10/29/raspberry-settings/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;整理 Raspberry Pi 3 的个人配置。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OS" scheme="http://forec.github.io/categories/OS/"/>
    
    
      <category term="Mistakes" scheme="http://forec.github.io/tags/Mistakes/"/>
    
      <category term="OS" scheme="http://forec.github.io/tags/OS/"/>
    
      <category term="Raspberry" scheme="http://forec.github.io/tags/Raspberry/"/>
    
  </entry>
  
  <entry>
    <title>Fix in Haskell</title>
    <link href="http://forec.github.io/2016/10/08/haskell-fixit/"/>
    <id>http://forec.github.io/2016/10/08/haskell-fixit/</id>
    <published>2016-10-08T06:48:19.000Z</published>
    <updated>2016-10-09T06:55:34.657Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;There’re many interesting features in Haskell, here I want to introduce and analyse the &lt;code&gt;Fixed-point combinator&lt;/code&gt;, which spent me several hours understanding but only scratched the surface. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Definition-Of-Fix&quot;&gt;&lt;a href=&quot;#Definition-Of-Fix&quot; class=&quot;headerlink&quot; title=&quot;Definition Of Fix&quot;&gt;&lt;/a&gt;Definition Of Fix&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;You can find the definition of &lt;code&gt;Fix&lt;/code&gt; function in &lt;a href=&quot;https://en.wikibooks.org/wiki/Haskell/Fix_and_recursion&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt;. The definition is&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt; :: (a -&amp;gt; a) -&amp;gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt; f = &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; x = f x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Fix-And-Recursion&quot;&gt;&lt;a href=&quot;#Fix-And-Recursion&quot; class=&quot;headerlink&quot; title=&quot;Fix And Recursion&quot;&gt;&lt;/a&gt;Fix And Recursion&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It seems a little confused. What does &lt;code&gt;let x = f x in x&lt;/code&gt; mean? For example, &lt;code&gt;GNU&lt;/code&gt; is &lt;code&gt;GNU is not Unix&lt;/code&gt;, so how could you expand &lt;code&gt;GNU&lt;/code&gt;? &lt;code&gt;GNU GNU GNU ... GNU is not Unix&lt;/code&gt;? Another example, &lt;code&gt;let x = (1:) x in x&lt;/code&gt;, what will x like? A list of infinite 1. Still confused? You can try &lt;code&gt;let x = x + 2 in x&lt;/code&gt;, this will cause an exception because of stack overflow. The reason is that the &lt;code&gt;(+2)&lt;/code&gt; operation is expanded constantly. So what is &lt;code&gt;fix&lt;/code&gt; exactly? &lt;code&gt;Fix&lt;/code&gt; can be imported from &lt;code&gt;Control.Monad.Fix&lt;/code&gt;, its definition has been given above.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we can learn the power of &lt;code&gt;Fix&lt;/code&gt; from an example. The &lt;code&gt;fact&lt;/code&gt; is used to calculate &lt;code&gt;factorial&lt;/code&gt;, here we calculate 5!. There are two kind of implements, the first is common recursion, like first line below. Instead, we can use &lt;code&gt;Fix&lt;/code&gt; to rewrite it. We pass a lambda function to fix as a parameter, the lambda function receives &lt;code&gt;rec&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; as parameters, &lt;code&gt;rec&lt;/code&gt; here is abstracted and it was initialized by &lt;code&gt;if n == 0 then 1&lt;/code&gt;, this is indeed initialized for the lambda function, however you can think it as an anonymous &lt;code&gt;rec&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Prelude&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; fact n = &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * fact (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; fact &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Prelude&lt;/span&gt;&amp;gt; fix (\&lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * &lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In fact, from the definition of &lt;code&gt;Fix&lt;/code&gt;, we know that &lt;code&gt;fix&lt;/code&gt; means a fixed-point. What we need to do is to write the equation for &lt;code&gt;fix&lt;/code&gt; like below. &lt;code&gt;Fix&lt;/code&gt; is used to find a fixed-point for given function.  &lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;f&lt;/span&gt; (fix f) = fix f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So why &lt;code&gt;fix (+2)&lt;/code&gt; is getting an exception? There is no &lt;code&gt;x&lt;/code&gt; for &lt;code&gt;x == x + 2&lt;/code&gt;, so &lt;code&gt;fix&lt;/code&gt; cannot find an fixed-point for &lt;code&gt;(+2)&lt;/code&gt;. That’s why &lt;code&gt;fix&lt;/code&gt; finally came into stack overflow. Now we are going to learn what &lt;code&gt;fix&lt;/code&gt; works in details. We can expand &lt;code&gt;fix&lt;/code&gt; like below.&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (fix (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + fix (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + fix (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + fix (&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;+))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : fix (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : fix (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : fix (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:)))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;As you can see, &lt;code&gt;fix (1:)&lt;/code&gt; can work fine since the lazy evaluation of Haskell. If we pass &lt;code&gt;fix (1:)&lt;/code&gt; to &lt;code&gt;show&lt;/code&gt;, &lt;code&gt;GHCI&lt;/code&gt; can still work and output &lt;code&gt;[1, 1, 1, ...&lt;/code&gt;. Return to the &lt;code&gt;fact&lt;/code&gt; example now, how does it work? We write that lambda function passed to &lt;code&gt;fix&lt;/code&gt; as a named function &lt;code&gt;fact&amp;#39;&lt;/code&gt; here, the definition is &lt;code&gt;fact&amp;#39; rec n = if n == 0 then 1 else n * rec (n-1)&lt;/code&gt;. Pass this to &lt;code&gt;fix&lt;/code&gt;, fix will find a fixed-point of &lt;code&gt;fact&amp;#39;&lt;/code&gt;, which is the function &lt;code&gt;f&lt;/code&gt; such that &lt;code&gt;f == fact&amp;#39; f&lt;/code&gt;. So we can write &lt;code&gt;fact&amp;#39;&lt;/code&gt; like below.&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;f&lt;/span&gt; = fact&#39; f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  = \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * f (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Are you familiar with the equation above? The &lt;code&gt;f&lt;/code&gt; substitute &lt;code&gt;rec&lt;/code&gt; in &lt;code&gt;fact&amp;#39;&lt;/code&gt;, and &lt;code&gt;f&lt;/code&gt; also acts as &lt;code&gt;fact&amp;#39; f&lt;/code&gt;, which is just recursion. So expand &lt;code&gt;fix&lt;/code&gt; as we always did. (Codes below are copied from wiki)&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;fix&lt;/span&gt; fact&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= fact&#39; (fix fact&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= (\&lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * &lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) (fix fact&#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * fix fact&#39; (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * fact&#39; (fix fact&#39;) (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * (\&lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; n&#39; -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n&#39; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n&#39; * &lt;span class=&quot;keyword&quot;&gt;rec&lt;/span&gt; (n&#39;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) (fix fact&#39;) (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * (&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * fix fact&#39; (n-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= \n -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; n * (&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; (n-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * (&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; (n-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) * fix fact&#39; (n-&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Implementation-Of-Foldr-amp-Reverse&quot;&gt;&lt;a href=&quot;#Implementation-Of-Foldr-amp-Reverse&quot; class=&quot;headerlink&quot; title=&quot;Implementation Of Foldr &amp;amp; Reverse&quot;&gt;&lt;/a&gt;Implementation Of Foldr &amp;amp; Reverse&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I am going to show some of the applications of &lt;code&gt;fix&lt;/code&gt;. First is &lt;code&gt;reverse&lt;/code&gt;. We can write &lt;code&gt;reverse&amp;#39;&lt;/code&gt; as the parameter of &lt;code&gt;fix&lt;/code&gt;. The type system of &lt;code&gt;reverse&amp;#39;&lt;/code&gt; is &lt;code&gt;([a] -&amp;gt;[a]) -&amp;gt; ([a] -&amp;gt; [a])&lt;/code&gt;. Notice that I use a pair of parentheses out of &lt;code&gt;[a] -&amp;gt; [a]&lt;/code&gt;, that’s because curry. &lt;code&gt;reverse&amp;#39;&lt;/code&gt; is just like &lt;code&gt;fact&amp;#39;&lt;/code&gt;, it receives a function &lt;code&gt;f&lt;/code&gt;, and &lt;code&gt;fix&lt;/code&gt; is going to find a &lt;code&gt;f&lt;/code&gt; which satisfies &lt;code&gt;f = reverse&amp;#39; f&lt;/code&gt;. Now we can easily write &lt;code&gt;reverse&amp;#39;&lt;/code&gt; below.&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;reverse&#39;&lt;/span&gt; :: ([a] -&amp;gt; [a]) -&amp;gt; ([a] -&amp;gt; [a])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;reverse&#39;&lt;/span&gt; f [] = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;reverse&#39;&lt;/span&gt; f (x:xs) = f xs ++ [x]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;reverse&lt;/span&gt; = fix reverse&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;-- expand the definition above&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(fix reverse&#39;) [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= (reverse&#39; (fix reverse&#39;)) [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= (reverse&#39; f) [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= f [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] ++ [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= (reverse&#39; f) [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] ++ [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;= ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another example I am going to talk is &lt;code&gt;foldr&lt;/code&gt;. I found the kata about &lt;code&gt;fix&lt;/code&gt; in Codewars, you can see it &lt;a href=&quot;https://www.codewars.com/kata/fix-it/haskell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. I didn’t pass the time limitation, and finally I got clues from conversations. There are several ways to write &lt;code&gt;foldr&lt;/code&gt; by &lt;code&gt;fix&lt;/code&gt;, however, you need to maintain the feature of &lt;code&gt;foldr&lt;/code&gt;, the lazy evaluation. I will show two of them both satisfying the lazy evaluation.&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; :: ((a -&amp;gt;b -&amp;gt;b) -&amp;gt;b -&amp;gt;[a] -&amp;gt;b) -&amp;gt;((a -&amp;gt;b -&amp;gt;b) -&amp;gt;b -&amp;gt;[a] -&amp;gt;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; f g acc [] = acc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; f g acc (x:xs) = f g (g x acc) xs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; :: ((a -&amp;gt;b -&amp;gt;b) -&amp;gt;b -&amp;gt;[a] -&amp;gt;b) -&amp;gt;((a -&amp;gt;b-&amp;gt; b) -&amp;gt;b -&amp;gt;[a] -&amp;gt;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; f g acc [] = acc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&#39;&lt;/span&gt; f g acc (x:xs) = g x (f g acc xs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;foldr&lt;/span&gt; = fix foldr&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Which is better? In my own opinion, the first is better since it is written in  a format of tail-end recursion. This would not expand the stack space it used. However, the second needs to expand until the end of the list. But, after my experiment testing big integers, both of them met stack overflow at the same size while works as same as each other when they can deal with the parameters. This proved that my thought was wrong. So, why the two formats have same performance? Stay for thought.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I hope this article could give you some help. If this article has any error, or you have some problems/suggestions, please &lt;a href=&quot;mailto:forec@bupt.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;e-mail me&lt;/a&gt;. I am glad to learn from each other.&lt;/p&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/10/08/haskell-fixit/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/10/08/haskell-fixit/&quot;&gt;https://forec.github.io/2016/10/08/haskell-fixit/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;There’re many interesting features in Haskell, here I want to introduce and analyse the &lt;code&gt;Fixed-point combinator&lt;/code&gt;, which spent me several hours understanding but only scratched the surface. &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Language" scheme="http://forec.github.io/categories/Language/"/>
    
    
      <category term="函数式编程" scheme="http://forec.github.io/tags/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Network Mining Based On Co-occurrence</title>
    <link href="http://forec.github.io/2016/10/03/co-occurrence-structure-capture/"/>
    <id>http://forec.github.io/2016/10/03/co-occurrence-structure-capture/</id>
    <published>2016-10-03T14:16:16.000Z</published>
    <updated>2016-10-04T09:53:37.172Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Generate network based on co-occurrence was proposed several decades ago, however, it still occupies most of papers talking about network discovering. Here I want to give a simple introduction for network capture by conventional co-occurrence methods. The following contents are slightly related with the basis of my current work, they are out of date but still useful sometimes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;General-Introduction&quot;&gt;&lt;a href=&quot;#General-Introduction&quot; class=&quot;headerlink&quot; title=&quot;General Introduction&quot;&gt;&lt;/a&gt;General Introduction&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;This article is just an introduction for several methods capturing useful structured data from unstructured data sets. It only talks about the basic implementation of co-occurrence in text data. After reading this short article, you will know how to generate a graph as follows from a paragraph of text, a set of Internet data captured from spiders or even a video.&lt;/li&gt;
&lt;li&gt;An example, the following picture is generated from a part of the script of 《Train to Busan》. I copied the script from Internet, and it’s easy to be analyzed by code. The picture was cut a little part when I published it.&lt;br&gt;&lt;img src=&quot;http://7xktmz.com1.z0.glb.clouddn.com/train-to-fusan.svg&quot; width=&quot;400px&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Entity-Identification&quot;&gt;&lt;a href=&quot;#Entity-Identification&quot; class=&quot;headerlink&quot; title=&quot;Entity Identification&quot;&gt;&lt;/a&gt;Entity Identification&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;A network is composed of a set of nodes and a set of edges. We name the set of nodes &lt;code&gt;V&lt;/code&gt;, and edges &lt;code&gt;E&lt;/code&gt;. The first problem we face is where can we get &lt;code&gt;V&lt;/code&gt;. Entity identification needs to be considered here. &lt;/li&gt;
&lt;li&gt;Some simple methods such as regress( for binary classification ), SVM can be used if you know the characteristics for nodes. However, in most conditions we even can’t describe what the nodes exactly like. In these conditions, deep learning algorithms such as Convolutional Neural Network could be considered. You can give some nodes you already know, then ask your model to learn what the nodes like. That may be a little complex, so we left them behind. Here we just consider the best condition.&lt;/li&gt;
&lt;li&gt;Here we make a hypothesis, you already have the set of all the nodes. That means, you have the &lt;code&gt;V&lt;/code&gt; and the data set, what you need to do is just generating a network for the &lt;code&gt;V&lt;/code&gt; from the given data set. Sounds simple? However this is indeed the case. In some few cases, for example, generating network from a movie like the example above, very few main entities appear in a movie, so we can get their identifications (here is name) from web or just make them yourself. &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Relationship-Identification&quot;&gt;&lt;a href=&quot;#Relationship-Identification&quot; class=&quot;headerlink&quot; title=&quot;Relationship Identification&quot;&gt;&lt;/a&gt;Relationship Identification&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Here we come across the second question, how to get &lt;code&gt;E&lt;/code&gt;? I will only introduce one simple method here, that’s what I metioned  above, the conventional co-occurrence method. I will introduce some more methods after my current job finished. &lt;/li&gt;
&lt;li&gt;The co-occurrence network, is just like what its name suggests, use the information that two entities occurred together. For example, in my analysis for 《Train to Busan》, I simply build an edge for two nodes if they occur in a same paragraph. If there always been an edge for two nodes, the weight of that edge will be increased. Once the data set is big enough, the main line of the data set will appear. You can choose building directed edges or undirected edges, and choose complete graph or not.&lt;/li&gt;
&lt;li&gt;The co-occurrence network is only useful for data sets that have obvious centralization, edges with low weight are always redundant. Also, many nodes will have no sense of presence because they are just playing samll roles. The co-occurrence will make every node connect with the center node, that’s unreasonable. Since we just introduce the very simple condition here, I will present two common ways for reducing the redundancy ans fixing the network.&lt;/li&gt;
&lt;li&gt;The first way is filter. Easy to understand, just filter out those edges with low weight. The threshold can be adjusted manually or learned by specific models.&lt;/li&gt;
&lt;li&gt;The second way is segmenting your network. This needs clustering first, and find the community centers. Cut these edges connecting with center nodes but has low weights. The effect is hard to be estimated according to what your network structure likes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Applicable-Scope&quot;&gt;&lt;a href=&quot;#Applicable-Scope&quot; class=&quot;headerlink&quot; title=&quot;Applicable Scope&quot;&gt;&lt;/a&gt;Applicable Scope&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Many fields can be applied with co-occurrence method. For example, capturing people relationships from videos, recodings, pictures, etc. I will show how to generate a network from a video later. That will cost a long time since many frame needs to be considered, which is a very time-consuming job.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I hope this article could give you some help. If this article has any error, or you have some problems/suggestions, please &lt;a href=&quot;mailto:forec@bupt.edu.cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;e-mail me&lt;/a&gt;. I am glad to learn from each other.&lt;/p&gt;
&lt;p&gt;Related Data Download Link： &lt;a href=&quot;http://7xktmz.com1.z0.glb.clouddn.com/Train%20to%20Busan.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Script for 《Train to Busan》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/10/03/co-occurrence-structure-capture/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/10/03/co-occurrence-structure-capture/&quot;&gt;https://forec.github.io/2016/10/03/co-occurrence-structure-capture/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Generate network based on co-occurrence was proposed several decades ago, however, it still occupies most of papers talking about network discovering. Here I want to give a simple introduction for network capture by conventional co-occurrence methods. The following contents are slightly related with the basis of my current work, they are out of date but still useful sometimes.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="大数据" scheme="http://forec.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Algorithms" scheme="http://forec.github.io/tags/Algorithms/"/>
    
      <category term="图分割" scheme="http://forec.github.io/tags/%E5%9B%BE%E5%88%86%E5%89%B2/"/>
    
      <category term="机器学习" scheme="http://forec.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Cantor Expansion With Duplicate Elements</title>
    <link href="http://forec.github.io/2016/09/27/duplicate-cantor/"/>
    <id>http://forec.github.io/2016/09/27/duplicate-cantor/</id>
    <published>2016-09-27T14:34:03.000Z</published>
    <updated>2016-10-03T15:53:05.076Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;Cantor Expansion is simple, however, for permutations with duplicate elements, some factors are changed.&lt;br&gt;&lt;strong&gt;For why I use English&lt;/strong&gt;: Since I am going to write an English paper, I want to write several articles in English here for practice. Please forgive me for any inconvenience I may have caused to you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default&quot;&gt;&lt;/script&gt;

&lt;h1 id=&quot;Basic-Cantor-Expansion&quot;&gt;&lt;a href=&quot;#Basic-Cantor-Expansion&quot; class=&quot;headerlink&quot; title=&quot;Basic Cantor Expansion&quot;&gt;&lt;/a&gt;Basic Cantor Expansion&lt;/h1&gt;&lt;h2 id=&quot;Cantor-Expansion&quot;&gt;&lt;a href=&quot;#Cantor-Expansion&quot; class=&quot;headerlink&quot; title=&quot;Cantor Expansion&quot;&gt;&lt;/a&gt;Cantor Expansion&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A permutation without duplicate elements can have a mapping with a sequence [1..n], for example, think about &lt;code&gt;2134&lt;/code&gt;, a permutation of {1, 2, 3, 4}. To calculate the position of &lt;code&gt;2134&lt;/code&gt; in all permutations of {1, 2, 3, 4}, we can follow the steps: &lt;code&gt;Pos = 1 * 3! + 0 * 2! + 0 * 1! = 6&lt;/code&gt;. The explanation is, since there’s only one element &lt;code&gt;1&lt;/code&gt; in elements behind &lt;code&gt;2&lt;/code&gt; and smaller than &lt;code&gt;2&lt;/code&gt;, if we swap &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;, there will be &lt;code&gt;3!&lt;/code&gt; permutations smaller than &lt;code&gt;2134&lt;/code&gt;. Similiar to this, no elements smaller than &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; and &lt;code&gt;4&lt;/code&gt;. So the related number with &lt;code&gt;2134&lt;/code&gt; is 6. In &lt;code&gt;C++&lt;/code&gt;, we can define a function named &lt;code&gt;perm2num&lt;/code&gt;, generate the position of a given permutation.&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* n is the number of elements, p is the set of elements */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;perm2num&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, add = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = n - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;lt; n; j++)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( p[j] &amp;lt; p[i] ) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                num += add;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        add *= (n - i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; num; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Cantor-Inverse&quot;&gt;&lt;a href=&quot;#Cantor-Inverse&quot; class=&quot;headerlink&quot; title=&quot;Cantor Inverse&quot;&gt;&lt;/a&gt;Cantor Inverse&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;To generate a permutation from the position it stays in, we can follow a reverse of the upper step. The &lt;code&gt;C++&lt;/code&gt; code is just the reverse operation of &lt;code&gt;perm2num&lt;/code&gt;.  &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;num2perm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *p, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p[i] = num % ( n - i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        num /= (n - i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = i - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j--)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( p[j] &amp;lt;= p[i] ) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p[i]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;With-Duplicate-Elements&quot;&gt;&lt;a href=&quot;#With-Duplicate-Elements&quot; class=&quot;headerlink&quot; title=&quot;With Duplicate Elements&quot;&gt;&lt;/a&gt;With Duplicate Elements&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;To generate the position of a permutation with duplicate elements, two factors influenced. &lt;strong&gt;First&lt;/strong&gt;, when calculate the possible increase for element &lt;code&gt;p[i]&lt;/code&gt;, in basic cantor expansion, we need to find how many elements are smaller than &lt;code&gt;p[i]&lt;/code&gt; and behind &lt;code&gt;p[i]&lt;/code&gt;, and multiply this number with &lt;code&gt;(n - i)!&lt;/code&gt;. Now, we need to divide this by the product of some factorials, which are how many elements are duplicate behind &lt;code&gt;p[i]&lt;/code&gt;. For example, &lt;code&gt;BABA&lt;/code&gt;, to calculate the increase for first B, 2 elements, both are A, are smaller than B. In basic Cantor Expansion, it should be &lt;code&gt;2 * 3!&lt;/code&gt;, now we need to divide it by &lt;code&gt;2! * 1!&lt;/code&gt;. The &lt;code&gt;2!&lt;/code&gt; is from 2 B after swapping, and &lt;code&gt;1!&lt;/code&gt; if from one A after swapping. &lt;strong&gt;Second&lt;/strong&gt;, if one element &lt;code&gt;y&lt;/code&gt; has been used in calculating an increase for element &lt;code&gt;p[i]&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; should only be counted once. For example, &lt;code&gt;BABA&lt;/code&gt; only adds &lt;code&gt;2 * 3! / 2!&lt;/code&gt; once.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I want to recommand a website &lt;a href=&quot;https://www.codewars.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.codewars.com&lt;/a&gt; here. My username in that website is Forec, you can find me &lt;a href=&quot;https://www.codewars.com/users/Forec&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. I was inspired by one kata in that website, and that reminds me of cantor expansion. You can find the kata &lt;a href=&quot;https://www.codewars.com/kata/alphabetic-anagrams/haskell&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;. I didn’t find any articles talking about duplicate condition. I wish this can help you.&lt;/p&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/09/27/duplicate-cantor/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/09/27/duplicate-cantor/&quot;&gt;https://forec.github.io/2016/09/27/duplicate-cantor/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Cantor Expansion is simple, however, for permutations with duplicate elements, some factors are changed.&lt;br&gt;&lt;strong&gt;For why I use English&lt;/strong&gt;: Since I am going to write an English paper, I want to write several articles in English here for practice. Please forgive me for any inconvenience I may have caused to you.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Code" scheme="http://forec.github.io/categories/Code/"/>
    
    
      <category term="Algorithms" scheme="http://forec.github.io/tags/Algorithms/"/>
    
  </entry>
  
  <entry>
    <title>Qt msvc2013 问题解决方案</title>
    <link href="http://forec.github.io/2016/09/14/tips-for-qt/"/>
    <id>http://forec.github.io/2016/09/14/tips-for-qt/</id>
    <published>2016-09-14T02:36:35.000Z</published>
    <updated>2016-10-03T15:34:06.592Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;编写 &lt;a href=&quot;https://github.com/Forec/light-applications/tree/master/remote-control&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Remote-Control&lt;/a&gt; 的客户端代码，界面用Qt绘制，记录出现的问题及解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;MSVC的Release问题&quot;&gt;&lt;a href=&quot;#MSVC的Release问题&quot; class=&quot;headerlink&quot; title=&quot;MSVC的Release问题&quot;&gt;&lt;/a&gt;MSVC的Release问题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用Qt版本5.6.0， msvc2013。Release后缺少动态链接库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msvc2013&lt;/code&gt; 的 &lt;code&gt;bin&lt;/code&gt; 目录下没有 &lt;code&gt;mingwm10.dll&lt;/code&gt;、&lt;code&gt;libgcc_s_dw2-1.dll&lt;/code&gt;等。&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;main()&lt;/code&gt; 函数顶部添加 &lt;code&gt;QCoreApplication::addLibraryPath(&amp;quot;./&amp;quot;);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将release出的 &lt;code&gt;app.exe&lt;/code&gt; 拷贝到部署文件夹，&lt;code&gt;path_to_msvc2013\bin\windeployqt.exe app.exe&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;可能仍出现 &lt;code&gt;无法定位动态链接库 Qt5Widgets.dll&lt;/code&gt;。环境变量中有 &lt;code&gt;MikTex&lt;/code&gt; 的路径，该路径下包含 &lt;code&gt;Qt5Widgets.dll&lt;/code&gt;， 将 &lt;code&gt;msvc2013&lt;/code&gt; 在环境变量中的位置调整高于 &lt;code&gt;MikTex&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;或在部署文件夹下新建 &lt;code&gt;qt.conf&lt;/code&gt;，指定 &lt;code&gt;Library&lt;/code&gt; 加载目录。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;部署程序图标&quot;&gt;&lt;a href=&quot;#部署程序图标&quot; class=&quot;headerlink&quot; title=&quot;部署程序图标&quot;&gt;&lt;/a&gt;部署程序图标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;程序图标 &lt;code&gt;icon.ico&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在工程目录下 （与&lt;code&gt;project.pro&lt;/code&gt;同目录）新建 &lt;code&gt;icon.rc&lt;/code&gt;，添加 &lt;code&gt;IDI_ICON1  ICON   DISCARDABLE   &amp;quot;icon.ico&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;project.pro&lt;/code&gt; 中添加 &lt;code&gt;RC_FILE = icon.rc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;release可执行文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;宽字符转换&quot;&gt;&lt;a href=&quot;#宽字符转换&quot; class=&quot;headerlink&quot; title=&quot;宽字符转换&quot;&gt;&lt;/a&gt;宽字符转换&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;执行 &lt;code&gt;ShellExecute()&lt;/code&gt; 函数时，参数 3 需要宽字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ShellExecute(NULL, L&amp;quot;open&amp;quot;, open_file_path, NULL , NULL, SW_SHOWNORMAL);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;编写函数 &lt;code&gt;string2LPCWSTR&lt;/code&gt; 将 &lt;code&gt;std::string&lt;/code&gt; 转为 &lt;code&gt;LPCWSTR&lt;/code&gt;。&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;inline&lt;/span&gt; LPCWSTR &lt;span class=&quot;title&quot;&gt;stringToLPCWSTR&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; src)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; srcsize = src.length() + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; convertedChars = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;wchar_t&lt;/span&gt; *wcstring = (&lt;span class=&quot;keyword&quot;&gt;wchar_t&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;wchar_t&lt;/span&gt;)*(src.length()-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mbstowcs_s(&amp;amp;convertedChars, wcstring, srcsize, src.c_str(), _TRUNCATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; wcstring;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Qt下UTF8和GBK的转换&quot;&gt;&lt;a href=&quot;#Qt下UTF8和GBK的转换&quot; class=&quot;headerlink&quot; title=&quot;Qt下UTF8和GBK的转换&quot;&gt;&lt;/a&gt;Qt下UTF8和GBK的转换&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;UTF82GBK&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;inline&lt;/span&gt; QString &lt;span class=&quot;title&quot;&gt;UTF82GBK&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; QString &amp;amp;inStr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    QTextCodec *gbk = QTextCodec::codecForName(&lt;span class=&quot;string&quot;&gt;&quot;GB18030&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    QString u2g = gbk-&amp;gt;toUnicode(inStr.toLocal8Bit());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; u2g;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;GBK2UTF8&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;inline&lt;/span&gt; QString &lt;span class=&quot;title&quot;&gt;GBK2UTF8&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; QString &amp;amp;inStr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    QTextCodec *gbk = QTextCodec::codecForName(&lt;span class=&quot;string&quot;&gt;&quot;GB18030&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    QString g2u = gbk-&amp;gt;toUnicode(gbk-&amp;gt;fromUnicode(inStr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; g2u;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Qt下线程和ui组件处理&quot;&gt;&lt;a href=&quot;#Qt下线程和ui组件处理&quot; class=&quot;headerlink&quot; title=&quot;Qt下线程和ui组件处理&quot;&gt;&lt;/a&gt;Qt下线程和ui组件处理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;编写线程子函数 &lt;code&gt;unsigned int __stdcall refreshThread(void* pM)&lt;/code&gt;，试图在子线程中修改ui组件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;handle = (HANDLE)_beginthreadex(NULL, 0, refreshThread, (void *)(&amp;amp;actives[i]), 0,NULL );&lt;/code&gt; 参数 3 不能是非静态成员函数&lt;/li&gt;
&lt;li&gt;Qt中只有 &lt;code&gt;QApplication.exec()&lt;/code&gt; 主线程能对界面元素进行控制&lt;/li&gt;
&lt;li&gt;利用 &lt;code&gt;signal/slot&lt;/code&gt;，在线程中创建一个 &lt;code&gt;signal&lt;/code&gt;，在主线程中创建一个 &lt;code&gt;slot&lt;/code&gt;。当线程修改界面时，发送 &lt;code&gt;signal&lt;/code&gt; 通知主线程响应。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Qt的Sql操作&quot;&gt;&lt;a href=&quot;#Qt的Sql操作&quot; class=&quot;headerlink&quot; title=&quot;Qt的Sql操作&quot;&gt;&lt;/a&gt;Qt的Sql操作&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;QSqlDatabase db = QSqlDatabase::addDatabase(&amp;quot;QSQLITE&amp;quot;);&lt;/code&gt; 添加 sqlite，可添加第二个参数指定当前连接名称，未指定该参数则为默认连接&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db.setDatabaseName(&amp;quot;data.db&amp;quot;);&lt;/code&gt; 指定数据库文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;query = QSqlQuery(db);&lt;/code&gt; 创建查询&lt;/li&gt;
&lt;li&gt;&lt;code&gt;query.exec(&amp;quot;&amp;quot;);&lt;/code&gt; 执行sql语句&lt;/li&gt;
&lt;li&gt;添加多个数据库时，&lt;code&gt;addDatabase&lt;/code&gt;必须指定不同的连接名称，否则会覆盖默认连接或重名连接引发错误。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Socket通信频率问题&quot;&gt;&lt;a href=&quot;#Socket通信频率问题&quot; class=&quot;headerlink&quot; title=&quot;Socket通信频率问题&quot;&gt;&lt;/a&gt;Socket通信频率问题&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用同一个 &lt;code&gt;buf&lt;/code&gt; 作为发送方的缓冲，当 &lt;code&gt;buf&lt;/code&gt;长度过大，超过 &lt;code&gt;Socket&lt;/code&gt;默认缓冲长度时，如果发送频率过快，socket的拆分发送将使 &lt;code&gt;buf&lt;/code&gt; 同时读写，接收方将收到垃圾数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;send&lt;/code&gt; 返回实际写入的字节数，检查发送的数目并移动缓冲窗口，结尾判断可以用字节填充。&lt;/li&gt;
&lt;li&gt;或缩小 &lt;code&gt;buf&lt;/code&gt; 长度，但网络情况差的时候仍会写入垃圾数据，只是垃圾数据较少。传输二进制文件将因为垃圾数据的存在而无效。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;一些组件的tips&quot;&gt;&lt;a href=&quot;#一些组件的tips&quot; class=&quot;headerlink&quot; title=&quot;一些组件的tips&quot;&gt;&lt;/a&gt;一些组件的tips&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;添加 &lt;code&gt;QTableWidget&lt;/code&gt; 右键菜单&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ui-&amp;gt;tableWidget-&amp;gt;setContextMenuPolicy(Qt::CustomContextMenu);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;popMenu = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QMenu(ui-&amp;gt;tableWidget);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;action = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QAction(&lt;span class=&quot;string&quot;&gt;&quot;connect&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MainWindow::on_tableWidget_customContextMenuRequested(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; QPoint &amp;amp;pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    popMenu-&amp;gt;clear();    &lt;span class=&quot;comment&quot;&gt;// popMenu for QTableWidget&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    popMenu-&amp;gt;addAction(action);    &lt;span class=&quot;comment&quot;&gt;// action for connect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    popMenu-&amp;gt;exec(QCursor::pos());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;滚动条位置设置&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;QTextEdit *edit = ui-&amp;gt;textEdit;        &lt;span class=&quot;comment&quot;&gt;// example for QTextEdit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;QScrollBar *sb = edit-&amp;gt;verticalScrollBar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sb-&amp;gt;setValue(sb-&amp;gt;maximumHeight());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Qt正则&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;QString &lt;span class=&quot;title&quot;&gt;IPv4pattern&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&amp;#123;3&amp;#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;QRegExp &lt;span class=&quot;title&quot;&gt;IPv4rx&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(IPv4pattern)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (IPv4rx.exactMatch(&lt;span class=&quot;string&quot;&gt;&quot;8.8.8.8&quot;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// example for IPv4 address check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;参考文献： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/ei__nino/article/details/7305024&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Qt图标修改&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21268558/application-failed-to-start-because-it-could-not-find-or-load-the-qt-platform-pl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Qt Windows部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/abeldeng/article/details/24767245&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Qt 多个数据库文件操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/09/14/tips-for-qt/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/09/14/tips-for-qt/&quot;&gt;https://forec.github.io/2016/09/14/tips-for-qt/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;编写 &lt;a href=&quot;https://github.com/Forec/light-applications/tree/master/remote-control&quot;&gt;Remote-Control&lt;/a&gt; 的客户端代码，界面用Qt绘制，记录出现的问题及解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="OS" scheme="http://forec.github.io/categories/OS/"/>
    
    
      <category term="Mistakes" scheme="http://forec.github.io/tags/Mistakes/"/>
    
      <category term="OS" scheme="http://forec.github.io/tags/OS/"/>
    
      <category term="Qt" scheme="http://forec.github.io/tags/Qt/"/>
    
      <category term="字符编码" scheme="http://forec.github.io/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
      <category term="线程" scheme="http://forec.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置策略备忘</title>
    <link href="http://forec.github.io/2016/09/09/docker-problems/"/>
    <id>http://forec.github.io/2016/09/09/docker-problems/</id>
    <published>2016-09-08T16:33:36.000Z</published>
    <updated>2016-10-03T15:34:00.445Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;整理Docker的配置，以及遇到问题的解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Docker更新Ubuntu被墙&quot;&gt;&lt;a href=&quot;#Docker更新Ubuntu被墙&quot; class=&quot;headerlink&quot; title=&quot;Docker更新Ubuntu被墙&quot;&gt;&lt;/a&gt;Docker更新Ubuntu被墙&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;把&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;中的 &lt;code&gt;http://archive.ubuntu.com&lt;/code&gt; 全部替换为 &lt;code&gt;http://mirrors.ustc.edu.cn&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑Dockfile文件，添加以下语句更新image resp中的Ubuntu，替换源为中科大镜像。&lt;/p&gt;
&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;FROM&lt;/span&gt; resp:latest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;sudo sed -i &lt;span class=&quot;string&quot;&gt;&#39;s/archive.ubuntu.com/mirrors.ustc.edu.cn/g&#39;&lt;/span&gt; /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;cat /etc/apt/sources.list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;apt-get clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;bash&quot;&gt;apt-get -y update --fix-missing &amp;amp;&amp;amp; apt-get install -y ******(apps you want to install)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行&lt;code&gt;docker build -t newresp .&lt;/code&gt;安装新功能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;设置Docker镜像&quot;&gt;&lt;a href=&quot;#设置Docker镜像&quot; class=&quot;headerlink&quot; title=&quot;设置Docker镜像&quot;&gt;&lt;/a&gt;设置Docker镜像&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;新版的 &lt;code&gt;Docker&lt;/code&gt; 使用 &lt;code&gt;/etc/docker/daemon.json（Linux）&lt;/code&gt; 或者 &lt;code&gt;%programdata%\docker\config\daemon.json（Windows）&lt;/code&gt; 来配置 Daemon。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在该配置文件中加入（没有该文件，先建一个）：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;registry-mirrors&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&quot;https://docker.mirrors.ustc.edu.cn&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Windows下更改Docker的虚拟机、镜像位置&quot;&gt;&lt;a href=&quot;#Windows下更改Docker的虚拟机、镜像位置&quot; class=&quot;headerlink&quot; title=&quot;Windows下更改Docker的虚拟机、镜像位置&quot;&gt;&lt;/a&gt;Windows下更改Docker的虚拟机、镜像位置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;设置环境变量 &lt;code&gt;MACHINE_STORAGE_PATH&lt;/code&gt; 为要存储所有 &lt;code&gt;docker&lt;/code&gt; 文件的位置。&lt;/li&gt;
&lt;li&gt;如尚未安装 &lt;code&gt;docker&lt;/code&gt;，安装即更改默认位置。&lt;/li&gt;
&lt;li&gt;如已安装 &lt;code&gt;docker&lt;/code&gt;，在&lt;code&gt;bash&lt;/code&gt;窗口中&lt;code&gt;docker-machine ls&lt;/code&gt;查看已有的&lt;code&gt;docker&lt;/code&gt;虚拟机，&lt;code&gt;docker-machine create --driver=virtualbox newDockerName&lt;/code&gt;即可新建一个虚拟机，新建后可&lt;code&gt;docker-machine rm default&lt;/code&gt;删除原有的默认虚拟机，并在新位置新建一个名为&lt;code&gt;default&lt;/code&gt;的虚拟机。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker-machine regenerate-certs default&lt;/code&gt;重新生成证书。&lt;/li&gt;
&lt;li&gt;重新执行&lt;code&gt;Docker Quick Terminal&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;精简版Ubuntu待安装软件列表&quot;&gt;&lt;a href=&quot;#精简版Ubuntu待安装软件列表&quot; class=&quot;headerlink&quot; title=&quot;精简版Ubuntu待安装软件列表&quot;&gt;&lt;/a&gt;精简版Ubuntu待安装软件列表&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ping&lt;/strong&gt;: inetutils-ping&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ifconfig&lt;/strong&gt;: net-tools&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;参考文献： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://lug.ustc.edu.cn/wiki/mirrors/help/docker&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker镜像使用帮助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://lug.ustc.edu.cn/wiki/mirrors/help/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ubuntu镜像使用帮助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.linuxdiyf.com/linux/22199.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Docker下Ubuntu Update错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/33933107/change-docker-machine-location-windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows下修改Docker Images位置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/09/09/docker-problems/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/09/09/docker-problems/&quot;&gt;https://forec.github.io/2016/09/09/docker-problems/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;整理Docker的配置，以及遇到问题的解决方案。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://forec.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://forec.github.io/tags/Docker/"/>
    
      <category term="Mistakes" scheme="http://forec.github.io/tags/Mistakes/"/>
    
  </entry>
  
  <entry>
    <title>Golang的通道技巧</title>
    <link href="http://forec.github.io/2016/09/08/gochan-accumulate/"/>
    <id>http://forec.github.io/2016/09/08/gochan-accumulate/</id>
    <published>2016-09-08T02:33:31.000Z</published>
    <updated>2016-10-20T02:18:44.004Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;整理近期遇到的Golang中通道和协程的技巧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;计时器及系统负荷均衡&quot;&gt;&lt;a href=&quot;#计时器及系统负荷均衡&quot; class=&quot;headerlink&quot; title=&quot;计时器及系统负荷均衡&quot;&gt;&lt;/a&gt;计时器及系统负荷均衡&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;time&lt;/code&gt; 包中的 &lt;code&gt;time.Ticker&lt;/code&gt; 结构体，该对象以指定的时间间隔重复向结构体中的通道C发送时间值，通道C对用户只读，该对象可通过工厂函数 &lt;code&gt;time.NewTicker(dur int64)&lt;/code&gt; 创建， dur是指定的时间间隔，单位为纳秒（ns）。在使协程周期性执行任务（打印状态日志，输出等）时使用。调用 &lt;code&gt;Stop()&lt;/code&gt; 使计时器停止，与 &lt;code&gt;select&lt;/code&gt; 结合如下：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ticker := time.NewTicker(updateInterval)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; ticker.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; u:= &amp;lt;-ch1:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; v:= &amp;lt;-ch2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ticker.C:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logState(status) &lt;span class=&quot;comment&quot;&gt;// call some logging function logState&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;// no value ready to be received&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;time.Tick()&lt;/code&gt; 函数声明为 &lt;code&gt;Tick(d Duration) &amp;lt;-chan Time&lt;/code&gt;，该函数返回的通道不需要关闭，它以 &lt;code&gt;d&lt;/code&gt; 为周期给返回的通道发送时间，&lt;code&gt;d&lt;/code&gt; 是纳秒数。可以通过此函数限制处理频率，如果应对的请求不平稳，可以增加一个带缓冲的可读写通道，从 &lt;code&gt;chRate&lt;/code&gt; 中读取处理时钟，在请求暴增时可以快速处理与缓冲数相等的请求，之后处理速度会下降到和 &lt;code&gt;chRate&lt;/code&gt; 一样的速率。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rate_per_sec := &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dur Duration = &lt;span class=&quot;number&quot;&gt;1e9&lt;/span&gt; / rate_per_sec&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chRate := time.Tick(dur) &lt;span class=&quot;comment&quot;&gt;// a tick every 1/10th of a second&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; req := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; requests &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;- chRate &lt;span class=&quot;comment&quot;&gt;// rate limit our Service.Method RPC calls&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; client.Call(&lt;span class=&quot;string&quot;&gt;&quot;Service.Method&quot;&lt;/span&gt;, req, ...)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定时器（Timer）定时器和计时器（Ticker）结构体类似（构造函数为 &lt;code&gt;NewTimer(d Duration)&lt;/code&gt;），但它只发送一次时间，在 &lt;code&gt;Dration d&lt;/code&gt; 之后。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;time.After(d)&lt;/code&gt; 函数声明为 &lt;code&gt;func After(d Duration) &amp;lt;-chan Time&lt;/code&gt;，在 &lt;code&gt;Duration d&lt;/code&gt; 之后，当前时间被发到返回的通道；因此它和 &lt;code&gt;NewTimer(d).C&lt;/code&gt; 等价；它类似 &lt;code&gt;Tick()&lt;/code&gt;，但 &lt;code&gt;After()&lt;/code&gt; 只发送一次时间。可以使用此函数应对简单的超时模式，以下为三种形式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;要执行某个任务（如从通道 &lt;code&gt;ch&lt;/code&gt; 中读取数据），但最多等待1秒。先创建一个信号通道，之后启动一个 &lt;code&gt;lambda&lt;/code&gt; 协程，协程在给通道发送数据前休眠：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;timeout := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;bool&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        time.Sleep(&lt;span class=&quot;number&quot;&gt;1e9&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// one second&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout &amp;lt;- &lt;span class=&quot;constant&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-ch:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a read from ch has occured&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-timeout:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// the read from ch has timed out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用 &lt;code&gt;time.After()&lt;/code&gt; 函数替换 &lt;code&gt;timeout-channel&lt;/code&gt;。可以在 &lt;code&gt;select&lt;/code&gt; 中使用来让发送信号超时或停止协程的执行。以下代码，在 &lt;code&gt;timeoutNs&lt;/code&gt; 纳秒后执行 &lt;code&gt;select&lt;/code&gt; 的 &lt;code&gt;timeout&lt;/code&gt; 分支后，包含&lt;code&gt;client.Call&lt;/code&gt; 的&lt;code&gt;lambda&lt;/code&gt; 协程也随之结束，不会给通道 &lt;code&gt;ch&lt;/code&gt; 返回值。缓冲大小设置为 &lt;code&gt;1&lt;/code&gt; 是必要的，可以避免协程死锁以及确保超时的通道可以被垃圾回收。需要注意如果 &lt;code&gt;select&lt;/code&gt; 中的某些非定时器选项的通道读写密集，则可能无法结束这些进程。这种情况如果将 &lt;code&gt;select&lt;/code&gt; 放到一个 &lt;code&gt;for&lt;/code&gt; 循环中，也无法精确地在定时器通道写入时就结束，因为 &lt;code&gt;select&lt;/code&gt; 对可以执行的多个 &lt;code&gt;case&lt;/code&gt; 采取伪随机算法选择，可能结束进程的时间要比定时器发出信号略晚一些。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; error, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;() &amp;#123; ch &amp;lt;- client.Call(&lt;span class=&quot;string&quot;&gt;&quot;Service.Method&quot;&lt;/span&gt;, args, &amp;amp;reply) &amp;#125; ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;lt;-time.After(timeoutNs):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// call timed out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; resp := &amp;lt;-ch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// use resp and reply&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;假设程序从多个复制的数据库同时读取，只需要接收首先到达的答案，&lt;code&gt;Query&lt;/code&gt; 函数获取数据库的连接切片，并行请求每一个数据库并返回收到的第一个响应。结果通道 &lt;code&gt;ch&lt;/code&gt; 必须是带缓冲的，以保证第一个发送进来的数据有地方可以存放，确保放入的首个数据总会成功：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; Query(conns []conn, query &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) Result &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ch := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; Result, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _, conn := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; conns &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt;(c Conn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ch &amp;lt;- c.DoQuery(query):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;(conn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;lt;- ch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;缓冲通道实现信号量模式&quot;&gt;&lt;a href=&quot;#缓冲通道实现信号量模式&quot; class=&quot;headerlink&quot; title=&quot;缓冲通道实现信号量模式&quot;&gt;&lt;/a&gt;缓冲通道实现信号量模式&lt;/h1&gt;&lt;p&gt;*使用缓冲通道模拟信号量，需满足&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带缓冲通道的容量和要同步的资源容量相同&lt;/li&gt;
&lt;li&gt;通道的长度（当前存放的元素个数）与当前资源被使用的数量相同&lt;/li&gt;
&lt;li&gt;容量减去通道的长度就是未处理的资源个数（标准信号量的整数值）&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建一个可缓冲通道表示单一信号量。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; Empty &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; semaphore &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; Empty&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将可用资源的数量N来初始化信号量 &lt;code&gt;semaphore：sem = make(semaphore, N)&lt;/code&gt;，提供方法从信号量通道中读取、写入。&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// acquire n resources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (s semaphore) P(n &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    e := &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt;(Empty)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s &amp;lt;- e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// release n resouces&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; (s semaphore) V(n &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i:= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; n; i++&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;- s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个互斥的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* mutexes */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(s semaphore)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Lock&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.&lt;span class=&quot;type&quot;&gt;P&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(s semaphore)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Unlock&lt;/span&gt;()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.&lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* signal-wait */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(s semaphore)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Wait&lt;/span&gt;(n int) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.&lt;span class=&quot;type&quot;&gt;P&lt;/span&gt;(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(s semaphore)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Signal&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s.&lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;管道过滤&quot;&gt;&lt;a href=&quot;#管道过滤&quot; class=&quot;headerlink&quot; title=&quot;管道过滤&quot;&gt;&lt;/a&gt;管道过滤&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;从通道接收的数据并发送给输出通道，可过滤符合条件的数据。&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sendChan := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;reciveChan := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; filter(sendChan, receiveChan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; filter(in &amp;lt;-&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt;, out &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- &lt;span class=&quot;typename&quot;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; inValue := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; in &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result := ... &lt;span class=&quot;comment&quot;&gt;/// processing inValue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    out &amp;lt;- result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;协程的恢复&quot;&gt;&lt;a href=&quot;#协程的恢复&quot; class=&quot;headerlink&quot; title=&quot;协程的恢复&quot;&gt;&lt;/a&gt;协程的恢复&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;以下代码停掉了服务器内部一个失败的协程而不影响其他协程的工作。&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; server(workChan &amp;lt;-&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; *Work) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; work := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; workChan &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;go&lt;/span&gt; safelyDo(work)   &lt;span class=&quot;comment&quot;&gt;// start the goroutine for that work&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; safelyDo(work *Work) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; err := &lt;span class=&quot;built_in&quot;&gt;recover&lt;/span&gt;(); err != &lt;span class=&quot;constant&quot;&gt;nil&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            log.Printf(&lt;span class=&quot;string&quot;&gt;&quot;Work failed with %s in %v&quot;&lt;/span&gt;, err, work)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do(work)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;参考文献： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unknwon/the-way-to-go_ZH_CN/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《The Way To Go》中文译本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/09/08/gochan-accumulate/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/09/08/gochan-accumulate/&quot;&gt;https://forec.github.io/2016/09/08/gochan-accumulate/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;整理近期遇到的Golang中通道和协程的技巧。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Language" scheme="http://forec.github.io/categories/Language/"/>
    
    
      <category term="Golang" scheme="http://forec.github.io/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Spark集群计算环境配置和使用</title>
    <link href="http://forec.github.io/2016/07/11/spark-initial/"/>
    <id>http://forec.github.io/2016/07/11/spark-initial/</id>
    <published>2016-07-11T06:53:38.000Z</published>
    <updated>2016-10-03T15:35:46.130Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在&lt;a href=&quot;https://forec.github.io/2016/07/09/hadoop-build/&quot;&gt;Hadoop配置与使用&lt;/a&gt;基础上配置Spark集群计算环境，以及简单Scala程序在集群的运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;在Hadoop通用并行框架上配置Spark&quot;&gt;&lt;a href=&quot;#在Hadoop通用并行框架上配置Spark&quot; class=&quot;headerlink&quot; title=&quot;在Hadoop通用并行框架上配置Spark&quot;&gt;&lt;/a&gt;在Hadoop通用并行框架上配置Spark&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;从&lt;a href=&quot;http://spark.apache.org/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apache Spark&lt;/a&gt;下载合适的版本，以&lt;code&gt;Pre-build for Hadoop 2.6&lt;/code&gt;为例，将压缩包解压到某目录，该压缩包目录作为环境变量&lt;code&gt;SPARK_HOME&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;向环境变量添加&lt;code&gt;%SPARK_HOME%/bin&lt;/code&gt;并source生效。&lt;/li&gt;
&lt;li&gt;将&lt;code&gt;%HADOOP_HOME%\etc\hadoop&lt;/code&gt;作为&lt;code&gt;HADOOP_CONF_DIR&lt;/code&gt;添加到环境变量。&lt;/li&gt;
&lt;li&gt;按Hadoop集群的运行方式启动Hadoop  &lt;figure class=&quot;highlight dos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bin/hdfs namenode -&lt;span class=&quot;built_in&quot;&gt;format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/hdfs dfs -&lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; /user/&amp;lt;username&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sbin/&lt;span class=&quot;built_in&quot;&gt;start&lt;/span&gt;-dfs.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sbin/&lt;span class=&quot;built_in&quot;&gt;start&lt;/span&gt;-yarn.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;在Hadoop集群上执行Spark作业&quot;&gt;&lt;a href=&quot;#在Hadoop集群上执行Spark作业&quot; class=&quot;headerlink&quot; title=&quot;在Hadoop集群上执行Spark作业&quot;&gt;&lt;/a&gt;在Hadoop集群上执行Spark作业&lt;/h1&gt;&lt;h2 id=&quot;一个Scala的MapReduce样本&quot;&gt;&lt;a href=&quot;#一个Scala的MapReduce样本&quot; class=&quot;headerlink&quot; title=&quot;一个Scala的MapReduce样本&quot;&gt;&lt;/a&gt;一个Scala的MapReduce样本&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;此样例为多维属性向量的均值计算&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.spark.&amp;#123;&lt;span class=&quot;type&quot;&gt;SparkConf&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;SparkContext&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.spark.rdd.&lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Statistic&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;/span&gt;args: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; conf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SparkConf&lt;/span&gt;().setAppName(&lt;span class=&quot;string&quot;&gt;&quot;example&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; spark = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SparkContext&lt;/span&gt;(conf)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; set = spark.textFile(args(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)).flatMap &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      line =&amp;gt; line.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;).map &amp;#123; opt =&amp;gt; (opt.split(&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).toInt, opt.split(&lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;)(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).toFloat) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;.reduceByKey(_+_)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; count = set.count()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    set.collect.map &amp;#123; &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; (key, value) =&amp;gt; value/count&amp;#125;.foreach&amp;#123;println&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    spark.stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;样例代码中，set为(Int, Float)的&lt;code&gt;&amp;lt;key, value&amp;gt;&lt;/code&gt;对的RDD，通过&lt;code&gt;reduceByKey&lt;/code&gt;将相同属性求和，在最后collect回收所有分布式集群上的结果汇总到本地。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;执行作业&quot;&gt;&lt;a href=&quot;#执行作业&quot; class=&quot;headerlink&quot; title=&quot;执行作业&quot;&gt;&lt;/a&gt;执行作业&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;将要执行的代码export为jar包，一下文件名为&lt;code&gt;example.jar&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;ssh到localhost（此处使用伪分布式Hadoop集群）。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行如下命令，其中&lt;code&gt;path_to_example_jar&lt;/code&gt;为jar包所在的位置，MainClass为jar包中要执行的object，args为传入MainClass的参数列表，空格隔开，可变长。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;spark-submit --class MainClass --master yarn-cluster path_to_example_jar args...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行作业后可在Hadoop监视器的logs中看到输出。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Scala的部分Spark-API&quot;&gt;&lt;a href=&quot;#Scala的部分Spark-API&quot; class=&quot;headerlink&quot; title=&quot;Scala的部分Spark API&quot;&gt;&lt;/a&gt;Scala的部分Spark API&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;API文档根目录：&lt;br&gt;&lt;a href=&quot;http://spark.apache.org/docs/1.5.1/api/scala/index.html#package&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://spark.apache.org/docs/1.5.1/api/scala/index.html#package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;key, value&amp;gt;&lt;/code&gt;类型的RDD：&lt;br&gt;&lt;a href=&quot;http://spark.apache.org/docs/1.5.1/api/scala/index.html#org.apache.spark.rdd.PairRDDFunctions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://spark.apache.org/docs/1.5.1/api/scala/index.html#org.apache.spark.rdd.PairRDDFunctions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;所有RDD：&lt;br&gt;&lt;a href=&quot;http://spark.apache.org/docs/1.5.1/api/scala/index.html#org.apache.spark.rdd.RDD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://spark.apache.org/docs/1.5.1/api/scala/index.html#org.apache.spark.rdd.RDD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/07/11/spark-initial/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/07/11/spark-initial/&quot;&gt;https://forec.github.io/2016/07/11/spark-initial/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在&lt;a href=&quot;https://forec.github.io/2016/07/09/hadoop-build/&quot;&gt;Hadoop配置与使用&lt;/a&gt;基础上配置Spark集群计算环境，以及简单Scala程序在集群的运行。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="http://forec.github.io/categories/Hadoop/"/>
    
    
      <category term="Hadoop" scheme="http://forec.github.io/tags/Hadoop/"/>
    
      <category term="Spark" scheme="http://forec.github.io/tags/Spark/"/>
    
  </entry>
  
  <entry>
    <title>Python3操作Access数据库</title>
    <link href="http://forec.github.io/2016/07/10/python-visit-access-database/"/>
    <id>http://forec.github.io/2016/07/10/python-visit-access-database/</id>
    <published>2016-07-10T08:45:29.000Z</published>
    <updated>2016-10-03T15:33:26.298Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;记录在windows 10下配置python3链接access数据库过程和几个简单操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装所需库文件&quot;&gt;&lt;a href=&quot;#安装所需库文件&quot; class=&quot;headerlink&quot; title=&quot;安装所需库文件&quot;&gt;&lt;/a&gt;安装所需库文件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;从&lt;a href=&quot;https://sourceforge.net/projects/pywin32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://sourceforge.net/projects/pywin32/&lt;/a&gt;下载最新的对应本地python3版本的pywin32库并安装。&lt;/li&gt;
&lt;li&gt;从&lt;a href=&quot;https://www.microsoft.com/zh-cn/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.microsoft.com/zh-cn/download/&lt;/a&gt;下载Access数据库驱动AccessDatabaseEngine_X64.exe。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;读取Access数据库&quot;&gt;&lt;a href=&quot;#读取Access数据库&quot; class=&quot;headerlink&quot; title=&quot;读取Access数据库&quot;&gt;&lt;/a&gt;读取Access数据库&lt;/h1&gt;&lt;h2 id=&quot;建立连接&quot;&gt;&lt;a href=&quot;#建立连接&quot; class=&quot;headerlink&quot; title=&quot;建立连接&quot;&gt;&lt;/a&gt;建立连接&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过以下交互命令同access数据库建立连接&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; win32com.client&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = win32com.client.gencache.EnsureDispatch(&lt;span class=&quot;string&quot;&gt;&#39;ADODB.Connection&#39;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DSN = &lt;span class=&quot;string&quot;&gt;&#39;PROVIDER = Microsoft.ACE.OLEDB.12.0;DATA SOURCE = /path/to/database;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.Open(DSN)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;访问数据库中名为&lt;code&gt;rs_name&lt;/code&gt;的表&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rs = win32com.client.Dispatch(&lt;span class=&quot;string&quot;&gt;r&#39;ADODB.Recordset&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rs_name = &lt;span class=&quot;string&quot;&gt;&#39;co&#39;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rs.Open(&lt;span class=&quot;string&quot;&gt;&#39;[&#39;&lt;/span&gt; + rs_name + &lt;span class=&quot;string&quot;&gt;&#39;]&#39;&lt;/span&gt;, conn, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 不允许更新，用于查询&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;注意在上面的代码中，&lt;code&gt;rs.Open()&lt;/code&gt;的最后两个参数，分别是游标(CursorType)和数据锁定类型(LockType)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;游标为0：为仅向前游标，只读，只能向前浏览记录，不支持分页、Recordset、BookMark&lt;/li&gt;
&lt;li&gt;游标为1：为键集游标，只读，其他用户对数据库做的修改将反映到记录集中，但其他用户增加或删除记录不会反映到记录集中。支持分页、Recordset、BookMark &lt;/li&gt;
&lt;li&gt;游标为2：为动态游标，可读写，功能最强，但耗资源最多。用户对记录做的修改，增加或删除记录都将反映到记录集中。支持全功能浏览。&lt;/li&gt;
&lt;li&gt;游标为3：为静态游标，可读写，只是数据的一个快照，用户对记录做的修改，增加或删除记录都不会反映到记录集中。支持向前或向后移动。&lt;/li&gt;
&lt;li&gt;数据锁定类型为1：默认锁定，只读，不能做任何修改&lt;/li&gt;
&lt;li&gt;数据锁定类型为2：悲观锁定，当编辑时立刻锁定记录&lt;/li&gt;
&lt;li&gt;数据锁定类型为3：乐观锁定，直到使用update方法提交更新记录后才锁定记录&lt;/li&gt;
&lt;li&gt;数据锁定类型为4：批量乐观锁定，允许修改多个记录，只有调用UpdateBatch方法后才锁定记录。&lt;br&gt;当不需要改动任何记录时，使用只读的记录集，这样提供者不用做任何检测。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;命令执行&quot;&gt;&lt;a href=&quot;#命令执行&quot; class=&quot;headerlink&quot; title=&quot;命令执行&quot;&gt;&lt;/a&gt;命令执行&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行SQL语句，以插入表为例&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sql_statement = &lt;span class=&quot;string&quot;&gt;&quot;Insert INTO [Table_Name] ([Field_1], [Field_2]) VALUES (&#39;data1&#39;, &#39;data2&#39;)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.Execute(sql_statement)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遍历数据库记录，&lt;code&gt;rs.MoveFirst()&lt;/code&gt;访问数据库的第一行记录，&lt;code&gt;rs.MoveNext()&lt;/code&gt;转移到下一行。注意如果第一个记录为空，则&lt;code&gt;rs.MoveFirst()&lt;/code&gt;会产生一个错误，如果此前将rs的Cursorlocation设置为3，则此问题可解决。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rs.MoveFirst()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; rs.EOF:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rs.MoveNext()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看数据，在下面的例子中，打开的表格中，第一列的名称为ID，第一行数据的ID为001，第二行数据的ID为002。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;rs.MoveFirst()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(rs.Fields.Item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;ID&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(rs.Fields.Item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;001&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;rs.MoveNext()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(rs.Fields.Item(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).Value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;002&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;表的列数可通过&lt;code&gt;rs.Fields.Count&lt;/code&gt;获取。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;参考博客：   &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2cto.com/kf/201204/129384.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python连接Access数据库&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://soft.zdnet.com.cn/software_zone/2008/0520/870686.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python读取mdb文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://my.oschina.net/duxuefeng/blog/64137&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;win32com用法_杜雪峰的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/07/10/python-visit-access-database/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/07/10/python-visit-access-database/&quot;&gt;https://forec.github.io/2016/07/10/python-visit-access-database/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录在windows 10下配置python3链接access数据库过程和几个简单操作。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="DataBase" scheme="http://forec.github.io/categories/DataBase/"/>
    
    
      <category term="Access" scheme="http://forec.github.io/tags/Access/"/>
    
      <category term="Python" scheme="http://forec.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop配置和使用</title>
    <link href="http://forec.github.io/2016/07/09/hadoop-build/"/>
    <id>http://forec.github.io/2016/07/09/hadoop-build/</id>
    <published>2016-07-09T12:56:27.000Z</published>
    <updated>2016-10-03T15:35:35.911Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;简单记录在Ubuntu Linux上搭建本地伪分布式的Hadoop MapReduce集群过程及使用方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装并配置hadoop&quot;&gt;&lt;a href=&quot;#安装并配置hadoop&quot; class=&quot;headerlink&quot; title=&quot;安装并配置hadoop&quot;&gt;&lt;/a&gt;安装并配置hadoop&lt;/h1&gt;&lt;h2 id=&quot;安装Hadoop及需要的工具&quot;&gt;&lt;a href=&quot;#安装Hadoop及需要的工具&quot; class=&quot;headerlink&quot; title=&quot;安装Hadoop及需要的工具&quot;&gt;&lt;/a&gt;安装Hadoop及需要的工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;jdk 1.7或以上版本：&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads/index.html&lt;/a&gt;，并配置JAVA_HOME环境变量。&lt;/li&gt;
&lt;li&gt;hadoop稳定版本，下文以2.6.4为例：&lt;a href=&quot;http://hadoop.apache.org/releases.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hadoop.apache.org/releases.html&lt;/a&gt;，下载编译好的binary压缩包，解压到某目录，如&lt;code&gt;/home/forec/hadoop-2.6.4&lt;/code&gt;，并设置&lt;code&gt;HADOOP_HOME&lt;/code&gt;，如在&lt;code&gt;/etc/environment&lt;/code&gt;中添加&lt;code&gt;export HADOOP_HOME=/home/forec/hadoop-2.6.4/&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install rsync&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;设置环境变量&quot;&gt;&lt;a href=&quot;#设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;设置环境变量&quot;&gt;&lt;/a&gt;设置环境变量&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;%HADOOP_HOME%/etc/hadoop&lt;/code&gt;目录下的&lt;code&gt;hadoop-env.sh&lt;/code&gt;中添加&lt;code&gt;export JAVA_HOME=/path/to/jdk&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;/etc/environment&lt;/code&gt;中添加&lt;code&gt;export HADOOP_PREFIX=/home/forec/hadoop-2/6/4/&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;下面的操作均在HADOOP_HOME目录下进行&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;本地非分布式操作&quot;&gt;&lt;a href=&quot;#本地非分布式操作&quot; class=&quot;headerlink&quot; title=&quot;本地非分布式操作&quot;&gt;&lt;/a&gt;本地非分布式操作&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在默认模式下，hadoop被配置为非分布式的运行模式，以单独的java进程运行，适合debug。以下命令演示以非分布式方式在hadoop上运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;执行下面命令启动本地hadoop作业&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir /dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp /&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_input /dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_input&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bin/hadoop jar jar_to_run /dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_input /dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat /dir_&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;_output/*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;本地伪分布式操作&quot;&gt;&lt;a href=&quot;#本地伪分布式操作&quot; class=&quot;headerlink&quot; title=&quot;本地伪分布式操作&quot;&gt;&lt;/a&gt;本地伪分布式操作&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;hadoop可被配置为一个单个节点的伪分布式系统，每一个虚拟操作以单独的java进程运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;修改配置文件&quot;&gt;&lt;a href=&quot;#修改配置文件&quot; class=&quot;headerlink&quot; title=&quot;修改配置文件&quot;&gt;&lt;/a&gt;修改配置文件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;etc/hadoop/core-site.xml&lt;/code&gt;如下。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;hdfs://localhost:9000&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;etc/hadoop/hdfs-site.xml&lt;/code&gt;如下。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置无密钥ssh登录localhost：尝试&lt;code&gt;ssh localhost&lt;/code&gt;，若需输入密码，则通过下面命令免除输入密码的操作。其中如果本地已经生成了ssh密钥可以省略。&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t dsa -&lt;span class=&quot;constant&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; -f ~&lt;span class=&quot;regexp&quot;&gt;/.ssh/id&lt;/span&gt;_dsa	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cat ~&lt;span class=&quot;regexp&quot;&gt;/.ssh/id&lt;/span&gt;_dsa.pub &lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;~&lt;span class=&quot;regexp&quot;&gt;/.ssh/authorized&lt;/span&gt;_keys&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;在本地启动hadoop&quot;&gt;&lt;a href=&quot;#在本地启动hadoop&quot; class=&quot;headerlink&quot; title=&quot;在本地启动hadoop&quot;&gt;&lt;/a&gt;在本地启动hadoop&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;格式化文件系统: &lt;code&gt;$ bin/hdfs namenode -format&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;启动NameNode和DataNode: &lt;code&gt;sbin/start-dfs.sh&lt;/code&gt;，其log文件写入&lt;code&gt;%HADOOP_HOME%/logs&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;访问地址&lt;code&gt;http://localhost:50070&lt;/code&gt;可以看到NameNode的网页接口，如下图。&lt;img src=&quot;http://7xktmz.com1.z0.glb.clouddn.com/overview.png&quot; width=&quot;500px&quot;&gt;&lt;/li&gt;
&lt;li&gt;将地址栏的&lt;code&gt;http://localhost:50070/dfshealth.***&lt;/code&gt;改成&lt;code&gt;http://localhost:50070/dfshealth.jsp&lt;/code&gt;可进入文件系统，如下图。&lt;img src=&quot;http://7xktmz.com1.z0.glb.clouddn.com/directory.png&quot; width=&quot;500px&quot;&gt;&lt;/li&gt;
&lt;li&gt;建立HDFS目录以执行MapReduce任务：&lt;code&gt;$ bin/hdfs dfs -mkdir /user&lt;/code&gt;，&lt;code&gt;$ bin/hdfs dfs -mkdir /user/&amp;lt;username&amp;gt;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;将输入文件拷贝到分布式文件系统中: &lt;code&gt;$ bin/hdfs dfs -put /local_dir_for_input_files /dir_in_distributed_filesystem_for_input&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;注意上面的&lt;code&gt;/dir_in_distributed_filesystem_for_input&lt;/code&gt;是分布式文件系统中输入文件的目录，此命令将本地的输入文件拷贝到了分布式文件系统的该目录中。&lt;/li&gt;
&lt;li&gt;运行jar包: &lt;code&gt;$ bin/hadoop jar jar_file_to_excute /dir_in_distributed_filesystem_for_input /dir_in_distributed_filesystem_for_output&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;检查输出文件可以通过将分布式文件系统中的输出文件拷贝到本地，或直接在分布式文件系统中查看。拷贝到本地执行如下命令：&lt;code&gt;$ bin/hdfs dfs -get /dir_in_distributed_filesystem_for_output /local_dir&lt;/code&gt;，&lt;code&gt;$ cat /local_dir/*&lt;/code&gt;；在分布式文件系统查看执行如下命令：&lt;code&gt;$ bin/hdfs dfs -cat /dir_in_distributed_filesystem_for_output/*&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;任务完成后终止hadoop虚拟机：&lt;code&gt;$ sbin/stop-dfs.sh&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;在YARN执行MapReduce作业&quot;&gt;&lt;a href=&quot;#在YARN执行MapReduce作业&quot; class=&quot;headerlink&quot; title=&quot;在YARN执行MapReduce作业&quot;&gt;&lt;/a&gt;在YARN执行MapReduce作业&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;需要完成前面“在本地启动hadoop”的配置中1～4步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;etc/hadoop/mapred-site.xml&lt;/code&gt;，此文件在2.6.4版本中不存在，可以修改&lt;code&gt;etc/hadoop/mapred-site.xml.template&lt;/code&gt;并新建该文件。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce.framework.name&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;etc/hadoop/yarn-site.xml&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;yarn.nodemanager.aux-services&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;mapreduce_shuffle&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;property&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;configuration&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动资源管理器和节点管理器：&lt;code&gt;$ sbin/start-yarn.sh&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;启动浏览器，访问&lt;code&gt;http://localhost:8088/&lt;/code&gt;，可以查看hadoop的资源监视器，如下图。&lt;img src=&quot;http://7xktmz.com1.z0.glb.clouddn.com/yarn.png&quot; width=&quot;500px&quot;&gt;&lt;/li&gt;
&lt;li&gt;按上面执行hadoop的方式执行一个MapReduce任务。&lt;/li&gt;
&lt;li&gt;作业完成后关闭虚拟机：&lt;code&gt;$ sbin/stop-yarn.sh&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;需要注意，在伪分布式的hadoop上执行MapReduce任务时，需ssh到localhost，之后在8088端口才能看到作业记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;完整的hadoop作业运行示例&quot;&gt;&lt;a href=&quot;#完整的hadoop作业运行示例&quot; class=&quot;headerlink&quot; title=&quot;完整的hadoop作业运行示例&quot;&gt;&lt;/a&gt;完整的hadoop作业运行示例&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;安装并配置好hadoop，执行&lt;code&gt;$ sbin/start-yarn.sh&lt;/code&gt;和&lt;code&gt;$ sbin/start-dfs.sh&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一段简单的java代码如下，export出的jar包可在hadoop上执行MapReduce作业。使用eclipse或idea时，需要导入SDK、JDK和scala-hadoop-assembly包。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Iterator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.conf.Configuration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.FileSystem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.fs.Path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.LongWritable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.io.Text;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Job;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Mapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.Reducer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.input.FileInputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*********************** Map  **********************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Map&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Mapper&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Object&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Object key,Text value,Context context)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    	&lt;span class=&quot;comment&quot;&gt;// Map Progress&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//-----shuffle    ===&amp;gt; [key,value-list]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*********************** Reduce  **********************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Reduce&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Reducer&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;,&lt;span class=&quot;title&quot;&gt;Text&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Text key,Iterable&amp;lt;Text&amp;gt; values,Context context)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, InterruptedException&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		   	&lt;span class=&quot;comment&quot;&gt;// Reduce Progress&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		    &lt;span class=&quot;comment&quot;&gt;// context.write(***);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cleanup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/*********************** Main  **********************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException, IOException, ClassNotFoundException, InterruptedException&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    Configuration conf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Configuration();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    Job job = Job.getInstance(conf, &lt;span class=&quot;string&quot;&gt;&quot;forec&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setJarByClass(myson.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//*********set Map*************&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setMapperClass(Map.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setMapOutputKeyClass(Text.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setMapOutputValueClass(Text.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//******** set Reduce ************&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setReducerClass(Reduce.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setOutputKeyClass(Text.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.setOutputValueClass(Text.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//********* delete output *********&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    FileSystem fstm = FileSystem.get(conf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    Path outDir = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!outDir.equals(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	        fstm.delete(outDir, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//********** set input/output path***********&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    FileInputFormat.addInputPath(job, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    FileOutputFormat.setOutputPath(job, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Path(args[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    job.waitForCompletion(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成的jar包即可通过上述执行方式运行在hadoop上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;参考文献： &lt;a href=&quot;http://hadoop.apache.org/docs/r2.6.4/hadoop-project-dist/hadoop-common/SingleCluster.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hadoop官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原创作品，允许转载，转载时无需告知，但请务必以超链接形式标明文章&lt;a href=&quot;https://forec.github.io/2016/07/09/hadoop-build/&quot;&gt;原始出处&lt;/a&gt;(&lt;a href=&quot;https://forec.github.io/2016/07/09/hadoop-build/&quot;&gt;https://forec.github.io/2016/07/09/hadoop-build/&lt;/a&gt;) 、作者信息（&lt;a href=&quot;https://forec.github.io/&quot;&gt;Forec&lt;/a&gt;）和本声明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;简单记录在Ubuntu Linux上搭建本地伪分布式的Hadoop MapReduce集群过程及使用方法。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="http://forec.github.io/categories/Hadoop/"/>
    
    
      <category term="Hadoop" scheme="http://forec.github.io/tags/Hadoop/"/>
    
  </entry>
  
</feed>
